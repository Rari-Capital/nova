name: Fuzz Tests

on: [push, pull_request]

jobs:
  echidna:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        testName:
          - L1_NovaExecutionManager
          - L2_NovaRegistry

    steps:
      - uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Cache node_modules
        id: node-cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Install pip3
        run: |
          python -m pip install --upgrade pip

      - name: Install slither
        run: |
          pip3 install slither-analyzer

      - name: Install solc-select
        run: |
          pip3 install solc-select

      - name: Set solc v0.7.6
        run: |
          solc-select install 0.7.6
          solc-select use 0.7.6

      - name: Install echidna
        run: |
          sudo wget -O /tmp/echidna-test.tar.gz https://github.com/crytic/echidna/releases/download/v1.7.1/echidna-test-1.7.1-Ubuntu-18.04.tar.gz
          sudo tar -xf /tmp/echidna-test.tar.gz -C /usr/bin
          sudo chmod +x /usr/bin/echidna-test

      - name: Quick Fuzz ${{ matrix.testName }}
        # Only run quick fuzz if we're not pushing to master or making a PR going to master:
        if: ${{ github.event_name != 'workflow_dispatch' && github.ref != 'refs/heads/master' && github.base_ref != 'master' }}
        run: npm run fuzz quick ${{ matrix.testName }}

      - name: Long Fuzz ${{ matrix.testName }}
        # Only run long fuzz if we're pushing to master or making a PR going to master:
        if: ${{ github.event_name != 'workflow_dispatch' && (github.ref == 'refs/heads/master' || github.base_ref == 'master') }}
        run: npm run fuzz long ${{ matrix.testName }}
